Error Type: NoSuchElementException, Message: OpenQA.Selenium.NoSuchElementException: Unable to locate element: h1; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
   at OpenQA.Selenium.WebDriver.UnpackAndThrowOnError(Response errorResponse, String commandToExecute)
   at OpenQA.Selenium.WebDriver.ExecuteAsync(String driverCommandToExecute, Dictionary`2 parameters)
   at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)
   at OpenQA.Selenium.WebDriver.FindElement(String mechanism, String value)
   at OpenQA.Selenium.By.<.ctor>b__11_0(ISearchContext context)
   at OpenQA.Selenium.By.FindElement(ISearchContext context)
   at OpenQA.Selenium.WebDriver.FindElement(By by)
   at cardscore_api.Services.ParserServices.SoccerwayParserService.ParsePlayer(WebDriver driver, String url, String leagueName, String thisGameId, String leagueUrl)
   at cardscore_api.Services.ParserServices.SoccerwayParserService.ParseActionsByContainer(String leagueName, Boolean leftTeam, WebDriver driver, String thisGameId, String leagueUrl)
   at cardscore_api.Services.ParserServices.SoccerwayParserService.ParseActions(WebDriver driver, String leagueName, String thisGameId, String leagueUrl)
   at cardscore_api.Services.ParserServices.SoccerwayParserService.GetGames(WebDriver driver, String leagueName, String leagueUrl, Boolean parseActions, Boolean onlyActive, Nullable`1 startDateFilter, Nullable`1 endDateFilter)
   at cardscore_api.Services.ParserServices.SoccerwayParserService.GetActiveGamesByUrl(WebDriver driver, String url, String name, Boolean parseActions)
   at cardscore_api.Services.ParserService.GetActiveGamesByUrl(WebDriver driver, String url, String leagueName, Boolean parseActions)
   at cardscore_api.Services.NotificationWorkerService.GetActiveGames(String url, String name)
   at cardscore_api.Services.NotificationWorkerService.<>c__DisplayClass9_0.<<StartAsync>b__0>d.MoveNext(), StackTrace:    at OpenQA.Selenium.WebDriver.UnpackAndThrowOnError(Response errorResponse, String commandToExecute)
   at OpenQA.Selenium.WebDriver.ExecuteAsync(String driverCommandToExecute, Dictionary`2 parameters)
   at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)
   at OpenQA.Selenium.WebDriver.FindElement(String mechanism, String value)
   at OpenQA.Selenium.By.<.ctor>b__11_0(ISearchContext context)
   at OpenQA.Selenium.By.FindElement(ISearchContext context)
   at OpenQA.Selenium.WebDriver.FindElement(By by)
   at cardscore_api.Services.ParserServices.SoccerwayParserService.ParsePlayer(WebDriver driver, String url, String leagueName, String thisGameId, String leagueUrl)
   at cardscore_api.Services.ParserServices.SoccerwayParserService.ParseActionsByContainer(String leagueName, Boolean leftTeam, WebDriver driver, String thisGameId, String leagueUrl)
   at cardscore_api.Services.ParserServices.SoccerwayParserService.ParseActions(WebDriver driver, String leagueName, String thisGameId, String leagueUrl)
   at cardscore_api.Services.ParserServices.SoccerwayParserService.GetGames(WebDriver driver, String leagueName, String leagueUrl, Boolean parseActions, Boolean onlyActive, Nullable`1 startDateFilter, Nullable`1 endDateFilter)
   at cardscore_api.Services.ParserServices.SoccerwayParserService.GetActiveGamesByUrl(WebDriver driver, String url, String name, Boolean parseActions)
   at cardscore_api.Services.ParserService.GetActiveGamesByUrl(WebDriver driver, String url, String leagueName, Boolean parseActions)
   at cardscore_api.Services.NotificationWorkerService.GetActiveGames(String url, String name)
   at cardscore_api.Services.NotificationWorkerService.<>c__DisplayClass9_0.<<StartAsync>b__0>d.MoveNext()
